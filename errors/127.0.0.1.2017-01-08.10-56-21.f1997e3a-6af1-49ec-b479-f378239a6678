(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> 'builtin_function_or_method' object is not iterable"
p3
sS'layer'
p4
S'/home/ayush/web2py/applications/DineWithMe/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\n#@auth.requires_login()\ndef profile():\n    profileForm = SQLFORM(db.profile).process()\n    return locals()\n\ndef interest0():\n    options=[  str(x) for x in range(10)]\n    form=FORM(SELECT(*options,_name=\'test\',_multiple=\'multiple\'),INPUT (_type=\'submit\', url=\'\'))\n    if form.accepts(request,session):\n        print request.vars\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\ndef interest():\n    oldInt = db(db.interests.userid == auth.user_id and db.interests.iid == db.interestlist.id).select(db.interestlist.name)\n    iis = db(db.interestlist).select()\n    rev = {}\n    for i in iis:\n        rev[i[\'name\']] = i[\'id\']\n    options=[  str(x[\'name\']) for x in iis]\n    form=FORM(SELECT(options,_name=\'interestform\',_multiple=\'multiple\',_size=len(iis)),INPUT (_type=\'submit\', url=\'\'))\n    if form.accepts(request,session):\n        print request.vars.interestform\n        for j in request.vars.interestform:\n#            try:\n             db.interests.insert(userid=auth.user_id, iid=rev[j])\n#            except:\n#                print \'exception while adding interest, possible dup\'\n#                pass\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(locals)\n    #print iis[0]\n    #form = SQLFORM(db.interests).process()\n    #return locals()\n\n\n    \ndef add_interest():\n    print request.args\n    print request.vars\n    return locals()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(interest)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ayush/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/ayush/web2py/applications/DineWithMe/controllers/default.py", line 110, in <module>\n  File "/home/ayush/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ayush/web2py/applications/DineWithMe/controllers/default.py", line 61, in interest\n    return dict(locals)\nTypeError: \'builtin_function_or_method\' object is not iterable\n'
p11
s.